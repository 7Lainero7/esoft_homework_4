import { useContext, useEffect } from 'react'
import { AppContext } from '../contexts/AppContext'
import { BookPageContext } from '../contexts/BookPageContext'
import BookCard from '../components/BookCard'
import '../styles/SettingsPage.css'

const SettingsPage = () => {
  const { theme, toggleTheme, favorites, setFavorites, setBooks } = useContext(AppContext)
  const { textSettings, setTextColor, setTextSize, toggleBold } = useContext(BookPageContext)

  const sampleBooks = [
    {
      id: 'preview1',
      title: 'Preview Book',
      author: 'Demo Author',
      year: 2020,
      isbn: '1234',
      description: '–ü—Ä–∏–º–µ—Ä –∫–Ω–∏–≥–∏',
      cover: '/covers/react.jpg'
    }
  ]

  const clearFavorites = () => {
    if (confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏?')) {
      setFavorites([])
      localStorage.removeItem('favorites')
    }
  }

  const loadSamples = () => {
    const sample = [
      {
        id: '1',
        title: 'React –≤ –¥–µ–π—Å—Ç–≤–∏–∏',
        author: 'Mark Thomas',
        year: 2019,
        isbn: '1234567890',
        description: '–ü–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã.',
        cover: '/covers/react.jpg'
      },
      {
        id: '2',
        title: 'JavaScript –≥–ª—É–±–∂–µ',
        author: 'David Flanagan',
        year: 2020,
        isbn: '9876543210',
        description: '–ú–∞–≥–∏—è JS –∏–∑–Ω—É—Ç—Ä–∏.',
        cover: '/covers/js.png'
      }
    ]
    setBooks(sample)
    localStorage.setItem('books', JSON.stringify(sample))
  }

  return (
    <div className="settings-page">
      <h1>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>

      <section>
        <h2>üé® –¢–µ–º–∞</h2>
        <button onClick={toggleTheme}>
          –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É: {theme === 'light' ? '‚òÄÔ∏è Light' : 'üåô Dark'}
        </button>
        <div className={`preview-cards theme-${theme}`}>
          {sampleBooks.map((b) => <BookCard key={b.id} book={b} />)}
        </div>
      </section>

      <section>
        <h2>üßπ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏</h2>
        <button onClick={clearFavorites}>–°–±—Ä–æ—Å–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</button>
        <button onClick={loadSamples}>–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–º–µ—Ä –∫–Ω–∏–≥</button>
      </section>

      <section>
        <h2>üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–∫—Å—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é</h2>
        <label>
          –¶–≤–µ—Ç:
          <input type="radio" name="color" value="black" onChange={() => setTextColor('black')} /> black
          <input type="radio" name="color" value="sepia" onChange={() => setTextColor('saddlebrown')} /> sepia
          <input type="radio" name="color" value="darkblue" onChange={() => setTextColor('darkblue')} /> dark blue
        </label>
        <label>
          –†–∞–∑–º–µ—Ä:
          <select value={textSettings.size} onChange={(e) => setTextSize(e.target.value)}>
            <option value="small">Small</option>
            <option value="medium">Medium</option>
            <option value="large">Large</option>
          </select>
        </label>
        <label>
          <input type="checkbox" checked={textSettings.bold} onChange={toggleBold} />
          –ñ–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç
        </label>
      </section>
    </div>
  )
}

export default SettingsPage
